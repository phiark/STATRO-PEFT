# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.  For a PyCharm
#  project, it is recommended to include the following files:
#*.iml
#modules.xml
#.idea/misc.xml
#*.ipr

# Datasette
.datasette

# VS Code
.vscode/

# macOS
.DS_Store
.AppleDouble
.LSOverride

# Windows
Thumbs.db
ehthumbs.db
Desktop.ini
$RECYCLE.BIN/
*.cab
*.msi
*.msix
*.msm
*.msp
*.lnk

# Linux
*~

# Temporary files
*.tmp
*.temp
*.swp
*.swo
*~

# Logs
*.log
logs/

# Data files
data/
datasets/
*.csv
*.json
*.jsonl
*.parquet
*.h5
*.hdf5
*.pkl
*.pickle

# Model files
models/
checkpoints/
*.pt
*.pth
*.bin
*.safetensors
*.ckpt

# Experiment outputs
outputs/
results/
experiments/
runs/
wandb/
mlruns/
tensorboard_logs/

# Cache directories
cache/
.cache/
__pycache__/
.pytest_cache/
.mypy_cache/
.ruff_cache/

# Configuration files with secrets
.env.local
.env.*.local
config/secrets.yaml
config/local.yaml
*.key
*.pem
*.p12
*.pfx

# Docker
.dockerignore
Dockerfile.local
docker-compose.override.yml
docker-compose.local.yml

# Kubernetes
*.kubeconfig
kustomization.yaml

# IDE specific
.idea/
.vscode/
*.sublime-project
*.sublime-workspace

# Jupyter
.ipynb_checkpoints/
notebooks/.ipynb_checkpoints/
*.ipynb

# Profiling
*.prof
*.profile
*.cprof

# Coverage
.coverage
.coverage.*
htmlcov/
.tox/
.nox/

# Documentation
docs/_build/
docs/build/
site/

# Package files
*.egg-info/
dist/
build/

# Virtual environments
venv/
.venv/
env/
.env/
conda-env/

# Local development
local/
dev/
scratch/
playground/

# Backup files
*.bak
*.backup
*.old

# OS generated files
.DS_Store?
ehthumbs.db
Thumbs.db

# Editor temporary files
*~
.#*
#*#
.*.swp
.*.swo

# Python virtual environment
pyvenv.cfg

# Node.js (if using any JS tools)
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Rust (if using any Rust components)
target/
Cargo.lock

# Go (if using any Go components)
vendor/

# Java (if using any Java components)
*.class
*.jar
*.war
*.ear

# C/C++ (if using any native extensions)
*.o
*.a
*.so
*.dylib
*.dll

# Fortran (if using any Fortran code)
*.mod

# R (if using any R scripts)
.Rhistory
.RData
.Ruserdata

# MATLAB (if using any MATLAB code)
*.asv
*.m~

# LaTeX (if generating documentation)
*.aux
*.bbl
*.blg
*.fdb_latexmk
*.fls
*.log
*.out
*.synctex.gz
*.toc

# Specific to this project
# Add any project-specific ignore patterns here

# Experiment tracking
wandb/
mlflow/
tensorboard/

# Large files that shouldn't be in git
*.bin
*.model
*.weights

# Temporary experiment files
temp_*
tmp_*
experiment_*
test_run_*

# Local configuration overrides
config.local.yaml
settings.local.json

# Database files
*.db
*.sqlite
*.sqlite3

# Compressed files
*.zip
*.tar.gz
*.rar
*.7z

# Generated documentation
api_docs/
_build/
_static/
_templates/

# Pre-commit
.pre-commit-config.yaml.bak